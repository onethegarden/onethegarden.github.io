{"version":3,"file":"component---src-pages-categories-tsx-e558a0a1159a8ecea6c6.js","mappings":"0LAIMA,EAAsBC,EAAAA,QAAAA,GAAAA,WAAH,4EAAGA,CAAH,qFAQnBC,EAAWD,EAAAA,QAAAA,GAAAA,WAAH,iEAAGA,CAAH,oPAOQ,qBAAGE,MAAkBC,MAAMC,WAIpC,qBAAGF,MAAkBC,MAAME,SAKhB,qBAAGH,MAAkBC,MAAMG,WAEtC,qBAAGJ,MAAkBC,MAAMI,WAwBxC,MAdA,YAA4D,IAApCC,EAAmC,EAAnCA,aACtB,OACE,gBAACT,EAAD,KACGU,OAAOC,QAAQF,GAAcG,KAAI,gBAAEC,EAAF,KAAQC,EAAR,YAChC,gBAACZ,EAAD,CAAUa,IAAKF,GACb,gBAAC,KAAD,CAAMG,GAAE,cAAgBH,GACrBA,EADH,IACUC,EADV,WCnBV,EAtBoB,SAACG,GAAD,OAClBA,EAAMC,QACJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAACC,QACKC,IAAnBN,EAAKK,GAAyBL,EAAKK,GAAY,EAC9CL,EAAKK,QAGZL,EAAKO,MAEEP,IAET,CAAEO,IAAK,K,UCDJ,IAiBP,EA3BA,YAA4C,IAClCT,EADiC,EAAvBU,KACKC,kBAAfX,MACFR,GAAeoB,EAAAA,EAAAA,UAAQ,kBAAMC,EAAYb,KAAQ,IACvD,OACE,gBAACc,EAAA,EAAD,CAAQC,UAAU,QAChB,gBAAC,EAAD,CAAcvB,aAAcA","sources":["webpack://garden-by/./src/components/Main/CategoryList.tsx","webpack://garden-by/./src/hooks/useCategory.ts","webpack://garden-by/./src/pages/categories.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst CategoryListWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding-left: 0;\n  padding: 0.8rem 1rem;\n`;\n\nconst Category = styled.li`\n  display: inline-block;\n  height: 26px;\n  margin: 4px 4px 0 0;\n  padding: 0 10px;\n  font-size: 13px;\n  line-height: 27px;\n  background-color: ${({ theme }) => theme.color.purple1};\n  vertical-align: top;\n\n  a {\n    color: ${({ theme }) => theme.color.gray3};\n    text-decoration: none;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.purple2};\n    transition-duration: 0.5s;\n    color: ${({ theme }) => theme.color.purple5};\n  }\n`;\n\nexport type CategoryListProps = {\n  categoryList: {\n    [key: string]: number;\n  };\n};\n\nfunction CategoryList({ categoryList }: CategoryListProps) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <Category key={name}>\n          <Link to={`/?category=${name}`}>\n            {name}({count})\n          </Link>\n        </Category>\n      ))}\n    </CategoryListWrapper>\n  );\n}\n\nexport default CategoryList;\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\nimport { Edge } from '../pages/index';\n\nconst useCategory = (edges: Edge[]) =>\n  edges.reduce(\n    (\n      list: { [key: string]: number },\n      {\n        node: {\n          frontmatter: { categories },\n        },\n      }: { node: { frontmatter: { categories: string[] } } },\n    ) => {\n      categories.forEach((category) => {\n        if (list[category] === undefined) list[category] = 1;\n        else list[category]++;\n      });\n\n      list.All++;\n\n      return list;\n    },\n    { All: 0 },\n  );\n\nexport default useCategory;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport React, { useMemo } from 'react';\nimport { graphql } from 'gatsby';\nimport CategoryList from '../components/Main/CategoryList';\nimport useCategory from '../hooks/useCategory';\nimport Layout from '../components/Layout';\nimport { Data } from '../models/blog';\n\ntype categoryProps = {\n  data: Data;\n};\n\nfunction category({ data }: categoryProps) {\n  const { edges } = data.allMarkdownRemark;\n  const categoryList = useMemo(() => useCategory(edges), []);\n  return (\n    <Layout pageTitle=\"Blog\">\n      <CategoryList categoryList={categoryList} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { layout: { ne: \"about\" } } }\n      sort: { fields: fields___slug, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default category;\n"],"names":["CategoryListWrapper","styled","Category","theme","color","purple1","gray3","purple2","purple5","categoryList","Object","entries","map","name","count","key","to","edges","reduce","list","node","frontmatter","categories","forEach","category","undefined","All","data","allMarkdownRemark","useMemo","useCategory","Layout","pageTitle"],"sourceRoot":""}