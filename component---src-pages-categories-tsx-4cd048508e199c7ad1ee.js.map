{"version":3,"file":"component---src-pages-categories-tsx-4cd048508e199c7ad1ee.js","mappings":"0LAwBMA,EAAsBC,EAAAA,QAAAA,GAAAA,WAAH,4EAAGA,CAAH,qFAQnBC,EAAWD,EAAAA,QAAAA,GAAAA,WAAH,iEAAGA,CAAH,iVASQ,qBAAGE,MAAkBC,MAAMC,SAGpC,qBAAGF,MAAkBC,MAAME,SAIhB,qBAAGH,MAAkBC,MAAMG,SAKnD,EA3C2D,YAA6B,IAAjBC,EAAgB,EAAhBA,aACrE,OACE,gBAACR,EAAD,KACGS,OAAOC,QAAQF,GAAcG,KAAI,gBAAEC,EAAF,KAAQC,EAAR,YAChC,gBAACX,EAAD,KACE,gBAAC,KAAD,CAAMY,GAAE,cAAgBF,GACrBA,EADH,IACUC,EADV,W,UCUH,IAcP,EA3BA,YAImB,IAFME,EAEP,EAHhBC,KACEC,kBAAqBF,MAGjBP,GAAeU,EAAAA,EAAAA,UAAQ,kBCfJ,SAACH,GAAD,OACzBA,EAAMI,QACJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAACC,QACKC,IAAnBN,EAAKK,GAAyBL,EAAKK,GAAY,EAC9CL,EAAKK,QAGZL,EAAI,MAEGA,IAET,CAAEO,IAAK,IDJ0BC,CAAYb,KAAQ,IACvD,OACE,gBAAC,IAAD,CAAQc,UAAU,QAChB,gBAAC,EAAD,CAAcrB,aAAcA","sources":["webpack://garden-by/./src/components/Main/CategoryList.tsx","webpack://garden-by/./src/pages/categories.tsx","webpack://garden-by/./src/hooks/useCategory.ts"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport type CategoryListProps = {\n  categoryList: {\n    [key: string]: number;\n  };\n};\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({ categoryList }) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <Category>\n          <Link to={`/?category=${name}`}>\n            {name}({count})\n          </Link>\n        </Category>\n      ))}\n    </CategoryListWrapper>\n  );\n};\n\nconst CategoryListWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding-left: 0;\n  padding: 0.8rem 1rem;\n`;\n\nconst Category = styled.li`\n  margin: 0.3rem;\n  margin-right: 2rem;\n  padding: 0.5rem 0;\n  font-size: 18px;\n  font-weight: 400;\n  margin-right: 1rem;\n  border-radius: 0.3rem;\n  padding: 0.2rem 1rem;\n  background-color: ${({ theme }) => theme.color.gray1};\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  a {\n    color: ${({ theme }) => theme.color.gray3};\n    text-decoration: none;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.color.gray2};\n    transition-duration: 0.5s;\n  }\n`;\n\nexport default CategoryList;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport CategoryList from '../components/Main/CategoryList';\nimport { useCategory } from '../hooks/useCategory';\nimport { Data } from './index';\nimport Layout from '../components/layout';\n\ninterface categoryProps {\n  data: Data;\n}\n\nfunction category({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}: categoryProps) {\n  const categoryList = useMemo(() => useCategory(edges), []);\n  return (\n    <Layout pageTitle=\"Blog\">\n      <CategoryList categoryList={categoryList} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: fields___slug, order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default category;\n","import { Edge } from \"../pages/index\";\n\nexport const useCategory = (edges: Edge[]) =>\n  edges.reduce(\n    (\n      list: { [key: string]: number },\n      {\n        node: {\n          frontmatter: { categories },\n        },\n      }: { node: { frontmatter: { categories: string[] } } }\n    ) => {\n      categories.forEach((category) => {\n        if (list[category] === undefined) list[category] = 1;\n        else list[category]++;\n      });\n\n      list[\"All\"]++;\n\n      return list;\n    },\n    { All: 0 }\n  );\n"],"names":["CategoryListWrapper","styled","Category","theme","color","gray1","gray3","gray2","categoryList","Object","entries","map","name","count","to","edges","data","allMarkdownRemark","useMemo","reduce","list","node","frontmatter","categories","forEach","category","undefined","All","useCategory","pageTitle"],"sourceRoot":""}